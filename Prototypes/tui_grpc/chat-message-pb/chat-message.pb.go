// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat-message.proto

package chatmessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChatMessage struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_message_1631650d7a3253ef, []int{0}
}
func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (dst *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(dst, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ChatMessage) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type ChatMessageList struct {
	// creates a slice of ChatMessage
	Chatmessages         []*ChatMessage `protobuf:"bytes,1,rep,name=chatmessages" json:"chatmessages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChatMessageList) Reset()         { *m = ChatMessageList{} }
func (m *ChatMessageList) String() string { return proto.CompactTextString(m) }
func (*ChatMessageList) ProtoMessage()    {}
func (*ChatMessageList) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_message_1631650d7a3253ef, []int{1}
}
func (m *ChatMessageList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessageList.Unmarshal(m, b)
}
func (m *ChatMessageList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessageList.Marshal(b, m, deterministic)
}
func (dst *ChatMessageList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessageList.Merge(dst, src)
}
func (m *ChatMessageList) XXX_Size() int {
	return xxx_messageInfo_ChatMessageList.Size(m)
}
func (m *ChatMessageList) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessageList.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessageList proto.InternalMessageInfo

func (m *ChatMessageList) GetChatmessages() []*ChatMessage {
	if m != nil {
		return m.Chatmessages
	}
	return nil
}

// Empty message type used for Read method
type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_chat_message_1631650d7a3253ef, []int{2}
}
func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (dst *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(dst, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ChatMessage)(nil), "chatmessage.ChatMessage")
	proto.RegisterType((*ChatMessageList)(nil), "chatmessage.ChatMessageList")
	proto.RegisterType((*Void)(nil), "chatmessage.Void")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatMessagesClient is the client API for ChatMessages service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatMessagesClient interface {
	Read(ctx context.Context, in *Void, opts ...grpc.CallOption) (*ChatMessageList, error)
	Write(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*ChatMessage, error)
}

type chatMessagesClient struct {
	cc *grpc.ClientConn
}

func NewChatMessagesClient(cc *grpc.ClientConn) ChatMessagesClient {
	return &chatMessagesClient{cc}
}

func (c *chatMessagesClient) Read(ctx context.Context, in *Void, opts ...grpc.CallOption) (*ChatMessageList, error) {
	out := new(ChatMessageList)
	err := c.cc.Invoke(ctx, "/chatmessage.ChatMessages/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatMessagesClient) Write(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*ChatMessage, error) {
	out := new(ChatMessage)
	err := c.cc.Invoke(ctx, "/chatmessage.ChatMessages/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatMessagesServer is the server API for ChatMessages service.
type ChatMessagesServer interface {
	Read(context.Context, *Void) (*ChatMessageList, error)
	Write(context.Context, *ChatMessage) (*ChatMessage, error)
}

func RegisterChatMessagesServer(s *grpc.Server, srv ChatMessagesServer) {
	s.RegisterService(&_ChatMessages_serviceDesc, srv)
}

func _ChatMessages_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatMessagesServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatmessage.ChatMessages/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatMessagesServer).Read(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatMessages_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatMessagesServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatmessage.ChatMessages/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatMessagesServer).Write(ctx, req.(*ChatMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatMessages_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chatmessage.ChatMessages",
	HandlerType: (*ChatMessagesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _ChatMessages_Read_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _ChatMessages_Write_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat-message.proto",
}

func init() { proto.RegisterFile("chat-message.proto", fileDescriptor_chat_message_1631650d7a3253ef) }

var fileDescriptor_chat_message_1631650d7a3253ef = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xce, 0x48, 0x2c,
	0xd1, 0xcd, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x06, 0x89, 0x41, 0x85, 0x94, 0x4c, 0xb9, 0xb8, 0x9d, 0x33, 0x12, 0x4b, 0x7c, 0x21, 0x5c, 0x21,
	0x21, 0x2e, 0x96, 0x92, 0xd4, 0x8a, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x1b,
	0x24, 0x96, 0x56, 0x94, 0x9f, 0x2b, 0xc1, 0x04, 0x11, 0x03, 0xb1, 0x95, 0xfc, 0xb9, 0xf8, 0x91,
	0xb4, 0xf9, 0x64, 0x16, 0x97, 0x08, 0xd9, 0x70, 0xf1, 0x20, 0x19, 0x5c, 0x2c, 0xc1, 0xa8, 0xc0,
	0xac, 0xc1, 0x6d, 0x24, 0xa1, 0x87, 0x24, 0xa8, 0x87, 0xa4, 0x27, 0x08, 0x45, 0xb5, 0x12, 0x1b,
	0x17, 0x4b, 0x58, 0x7e, 0x66, 0x8a, 0x51, 0x07, 0x23, 0x17, 0x0f, 0x92, 0xaa, 0x62, 0x21, 0x4b,
	0x2e, 0x96, 0xa0, 0xd4, 0xc4, 0x14, 0x21, 0x41, 0x14, 0x83, 0x40, 0x6a, 0xa5, 0x64, 0x70, 0x99,
	0x0d, 0x72, 0x8f, 0x12, 0x83, 0x90, 0x2d, 0x17, 0x6b, 0x78, 0x51, 0x66, 0x49, 0xaa, 0x10, 0x4e,
	0x47, 0x48, 0xe1, 0x94, 0x51, 0x62, 0x48, 0x62, 0x03, 0x07, 0x97, 0x31, 0x20, 0x00, 0x00, 0xff,
	0xff, 0xfd, 0x4c, 0xa9, 0x72, 0x44, 0x01, 0x00, 0x00,
}
