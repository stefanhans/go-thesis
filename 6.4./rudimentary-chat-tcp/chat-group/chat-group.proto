syntax = 'proto3';

package chatgroup;

message Member {
    string name = 1;
    string ip = 2;
    string port = 3;
    bool leader = 4;
}

message MemberList {
    repeated Member member = 1;
}

// Services are mapped by request/reply message types
message Message {
    enum MessageType {
        // messages to handle subscriptions at the publishing service
        SUBSCRIBE_REQUEST = 0;
        SUBSCRIBE_REPLY = 1;

        // messages to handle unsubscriptions at the publishing service
        UNSUBSCRIBE_REQUEST = 2;
        UNSUBSCRIBE_REPLY = 3;

        // messages to publish chat messages via the publishing service
        PUBLISH_REQUEST = 4;
        PUBLISH_REPLY = 5;

        // messages to synchronize the member list of a chat group
        MEMBERLIST_REQUEST = 6;
        MEMBERLIST_REPLY = 7;

        // messages to request a list of leading members
        LEADERLIST_REQUEST = 8;
        LEADERLIST_REPLY = 9;

        // messages to request an echo of message text from member
        ECHO_REQUEST = 10;
        ECHO_REPLY = 11;
    }
    MessageType msgType = 1;
    Member  sender = 2;
    string  text = 3;
    MemberList memberList = 4;
}
